services:
    web:
        build: .
        container_name: sheet_music_web
        ports:
            - "8000:8000"
        volumes:
            - ./media:/app/media
        depends_on:
            db:
                condition: service_healthy
        env_file:
            - .env
        restart: unless-stopped
    db:
        image: postgres:17
        container_name: sheet_music_postgres
        volumes:
            - ./postgres_data:/var/lib/postgresql/data
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_HOST: ${POSTGRES_HOST}
            POSTGRES_PORT: ${POSTGRES_PORT}
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
            interval: 10s
            timeout: 5s
            retries: 5
        env_file:
            - .env
        restart: unless-stopped
    frontend-proxy:
        image: nginx:latest
        ports:
            - "8001:80"
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf:ro
            - ./media:/app/media
        env_file:
            - .env
        restart: unless-stopped
volumes:
    postgres_data: 
    media: